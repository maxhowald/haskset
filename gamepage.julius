var isSmall = false;

function dealCards(cardString){

	if (oldcardstr == cardString) {
			return;
	}
	oldcardstr = cardString
	for (ind = 1; ind < 4; ind++) {
		document.getElementById("extraCard" + ind).style.display = "none";
		document.getElementById("extraCard2" + ind).style.display = "none";	//added to get rid of 5th column
		document.getElementById("extraCard" + ind).className = "card";
		document.getElementById("extraCard2" + ind).className = "card";		//added for same reason
		isSmall = false;
	}
	isHighlighted = [];
	var i = 1;
	var j = 1;
	var card;
  var prefix = "http://nihil.ddns.net:8000/";
	while (cardString.length != 0){
		var comma = cardString.indexOf(",");
		var name = "slot" + i + j;
		if (comma == -1){
		  if (i == 4 || i == 5)
					return;
			card = cardString.slice(0);
			document.getElementById(name).src = prefix +  card + ".gif";
      document.getElementById(name).tag = card;
			document.getElementById(name).className = "card"
			break;
		}
		else if(i == 4){
			x = 1;
			while (x<4){
				if (comma == -1){
					card = cardString;
				}
				else{
					card = cardString.slice(0, comma);
				}
				document.getElementById("extraCard" + x).style.display = "inline";
				document.getElementById("extraCard" + x).src = prefix + card + ".gif";
				document.getElementById("extraCard" + x).tag = card;
				cardString = cardString.substr(comma + 1);
				comma = cardString.indexOf(",");
				x++;
			}
			j = 4;
		}
		
		else if (i == 5){
			isSmall = true;
			var y = 1;
			while (y<4){
				if (comma == -1){
					card = cardString;
				}
				else{
					card = cardString.slice(0, comma);
				}
				document.getElementById("extraCard2" + y).style.display = "inline";
				document.getElementById("extraCard2" + y).src = prefix + card + ".gif";
				document.getElementById("extraCard2" + y).tag = card;
				cardString = cardString.substr(comma + 1);
				comma = cardString.indexOf(",");
				y++;
			}
			
		
		}
		
		else{
			card = cardString.slice(0, comma);
			document.getElementById(name).src =  prefix + card + ".gif";		
			document.getElementById(name).tag = card;
			document.getElementById(name).className = "card"
			cardString = cardString.substr(comma + 1);
		}
		
		if (j == 4){
			j = 1;
			i++;
		}
		else{
			j++;
		}
	}
}
var gameStarted = false;
var oldcardstr = "";
var url = document.URL,
output = document.getElementById("output"),
form = document.getElementById("form"),
input = document.getElementById("input"),
conn;

url = url.replace("http:", "ws:").replace("https:", "wss:");
conn = new WebSocket(url);

conn.onmessage = function(e) {
		var	msg = e.data;
		switch(msg.substring(0,5)) { //first five chars specify the type of msg.
		case "DEBUG":
				console.log(msg);
				break;
		case "CARDS": //format: CARDS[1,2..]
				dealCards(msg.substring(6, msg.length - 1)); //strip away the [].
				break;
    case "EVENT": //format: EVENT: "player2", WRONG/RIGHT
				console.log(msg);
				newEvent(msg.substring(7, msg.length-6), msg.substring(msg.length-5));
				break;
		case "CHATS":
				//not implemented
				console.log(msg);
				break;
		case "BEGIN": //sent when someone starts the game. just acks that you're still here. 
				console.log(msg);
				document.getElementById("deal").onclick = submitCards
				document.getElementById("deal").textContent = "SET!!!";
				document.getElementById("deal").disabled = true;
				gameStarted = true;
				conn.send("READY");
				break;
		case "GOVER": //what to to when the game ends. Probably, redirect to a scoreboard page.
				window.location.replace("@{LobbyR}");
				break;
	  case "PLAYR": //format PLAYR: "player1", "p2", "p3", "max"
				console.log(msg);
				listOfPlayers = msg.substring(6, msg.length); 
				displayPlayers(listOfPlayers);
				break;
		}  			  
};


function displayPlayers(lst) {
		document.getElementById("listofplayers").innerHTML = "current players: " + lst;
}
 
var listOfPlayers = "";
var isHighlighted = [];

function submitCards(){
	var selected = isHighlighted.valueOf();
	conn.send("[" + selected + "]");	
}

function newEvent(player, event){
	var table = document.getElementById("eventTable");
	var row = table.insertRow(0);
	eventCell = row.insertCell(0);
	if (event == "RIGHT"){
		eventCell.innerHTML = player + " got a set!";
		eventCell.style.color = "green";
	}
	else{
		eventCell.innerHTML = player + " got a set wrong!";
		eventCell.style.color = "red";
	}
	document.getElementById("eventDiv").scrollTop = table.scrollHeight;
}

function highlight(slot, card){

    var done = false;
		if (isHighlighted.length > 0){
				for(index = 0; index < isHighlighted.length; index++){
						if (isHighlighted[index] == card){
								var done = true;									 
								if (isSmall){
									document.getElementById(slot).className = "smallCard";
								}
								else{
									document.getElementById(slot).className = "card";
								}
								isHighlighted.splice(index, 1);
						}
				}

		}

		if (done == false) {
				if (isHighlighted.length < 3){
						if (isSmall){
							document.getElementById(slot).className = "selectedSmall";
						}
						else{
							document.getElementById(slot).className = "selectedCard";
						}
						isHighlighted.push(card);
				}
		}
		
		if (isHighlighted.length == 3){
				document.getElementById("deal").disabled = false;
		}

		else if (!gameStarted){
				document.getElementById("deal").disabled = false;
		}
		else {
				document.getElementById("deal").disabled = true;
		}
}

function startGame() {
		if (confirm('Start the game with the following players: ' + listOfPlayers + '?')) {
    conn.send("BEGIN");
		} else {
				// Do nothing!
		}

		
}
